{"version":3,"sources":["pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/NavbarLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","isLoading","isError","useParams","findParent","parentName","parent","find","length","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","setIsLoading","setIsError","useEffect","peopleFromServer","NotFoundPage","NavbarLink","text","isActive","Navbar","role","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.c4e6d57b.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <NavLink\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n  isLoading: boolean;\n  isError: boolean;\n}\n\nexport const PeopleTable: FC<Props> = ({ people, isLoading, isError }) => {\n  const { slug = '' } = useParams();\n\n  const findParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {!people.length && !isLoading && (\n          <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n        )}\n\n        {people.length > 0 && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person) => (\n                <tr\n                  key={person.slug}\n                  className={classNames({\n                    'has-background-warning': slug === person.slug,\n                  })}\n                  data-cy=\"person\"\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n                  <td>{findParent(person.motherName)}</td>\n                  <td>{findParent(person.fatherName)}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const peopleFromServer = await getPeople();\n\n        setPeople(peopleFromServer);\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    })();\n  }, [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable\n        people={people}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FC } from 'react';\n\nexport interface Props {\n  to: string;\n  text: string;\n}\nexport const NavbarLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import { NavbarLink } from './NavbarLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavbarLink to=\"/\" text=\"Home\" />\n        <NavbarLink to=\"/people\" text=\"People\" />\n\n      </div>\n    </div>\n  </nav>\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n);\n"],"sourceRoot":""}